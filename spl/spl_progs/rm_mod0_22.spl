alias functionNum R1;
alias currentPID R2;


//AQCUIRE DISK
if (functionNum == 3) then
    while([DISK_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_DISK;
        multipush(R1, R2);
        call MOD_5;
        multipop(R1, R2);
    endwhile;
    [DISK_STATUS_TABLE] = 1;
    [DISK_STATUS_TABLE + 4] = currentPID;
    return;
endif;



if (functionNum == 8) then 
    while([TERMINAL_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_TERMINAL;
        multipush(R1, R2);

        call MOD_5;

        multipop(R1, R2);


    endwhile;
    [TERMINAL_STATUS_TABLE] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;
    return;
endif;



if(functionNum == 9) then
    if(currentPID != [TERMINAL_STATUS_TABLE + 1]) then
        alias r R0;
        r = -1;
        return;
    endif;
    [TERMINAL_STATUS_TABLE] = 0;
    alias i R3;
    i = 0;
    while(i < 16) do 
        if([PROCESS_TABLE + i * 16 + 4] == WAIT_TERMINAL) then
            [PROCESS_TABLE + i * 16 + 4] = READY;
        endif;
        i = i + 1;
    endwhile;
    alias r R0;
    r = 0;
    return;
endif;

if(functionNum == 6) then
    alias PID R2;
    alias i R4;
    i = 0;
    while(i < 32) do
        if([SEMAPHORE_TABLE + i * 4 + 1] == 0) then
            break;
        endif;
        i = i + 1;
    endwhile;
    if(i == 32) then
        R0 = -1;
        return;
    endif;
    [SEMAPHORE_TABLE + i * 4 + 1] = 1;
    [SEMAPHORE_TABLE + i * 4] = -1;
    R0 = i;
    return;
endif;


if(functionNum == 7) then
    alias sem_index R2;
    alias PID R3;
    if([SEMAPHORE_TABLE + sem_index * 4] == PID) then
        [SEMAPHORE_TABLE + sem_index * 4] = -1;
        alias i R4;
        i = 0;
        while(i < 16) do
            if([PROCESS_TABLE + i * 16 + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + i * 16 + 5] == sem_index) then
                
                [PROCESS_TABLE + i * 16 + 4] = READY;
                [PROCESS_TABLE + i * 16 + 5] = -1;
            endif;
            i = i + 1;
        endwhile;
    [SEMAPHORE_TABLE + sem_index * 4 + 1] = [SEMAPHORE_TABLE + sem_index * 4 + 1] - 1;
    return;
    endif;
endif;

