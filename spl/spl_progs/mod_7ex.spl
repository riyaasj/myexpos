//load init
loadi(65,7);
loadi(66,8);

//load int 10
loadi(22,35);
loadi(23,36);

//load exception handler
loadi(2, 15);
loadi(3, 16);

//load library
loadi(63,13);
loadi(64,14);

//load timer interrupt
loadi(4, 17);
loadi(5, 18);

//load int7
loadi(16,29);
loadi(17,30);

//load processes
loadi(83, 71);
loadi(89, 72);
loadi(95, 73);


//load scheduler
loadi(50,63);
loadi(51,64);

//INIT
PTBR = PAGE_TABLE_BASE + 20; 
PTLR = 10;

//Library 66-80
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = PTLR;

[76 * 512] = [65 * 512 + 1];











//print2 83-88
PTBR = PAGE_TABLE_BASE + 40; 
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";

[PROCESS_TABLE + 2 * 16 + 1] = 2;
[PROCESS_TABLE + 2 * 16 + 4] = CREATED;
[PROCESS_TABLE + 2 * 16 + 11] = 88;
[PROCESS_TABLE + 2 * 16 + 12] = 0;
[PROCESS_TABLE + 2 * 16 + 13] = 8*512;
[PROCESS_TABLE + 2 * 16 + 14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 2 * 16 + 15] = PTLR;

[86 * 512] = [83 * 512 + 1];












//print3 89-94
PTBR = PAGE_TABLE_BASE + 60; 
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 90;
[PTBR+5] = "0110";
[PTBR+6] = 91;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 89;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 92;
[PTBR+17] = "0110";
[PTBR+18] = 93;
[PTBR+19] = "0110";

[PROCESS_TABLE + 3 * 16 + 1] = 3;
[PROCESS_TABLE + 3 * 16 + 4] = CREATED;
[PROCESS_TABLE + 3 * 16 + 11] = 94;
[PROCESS_TABLE + 3 * 16 + 12] = 0;
[PROCESS_TABLE + 3 * 16 + 13] = 8*512;
[PROCESS_TABLE + 3 * 16 + 14] = PAGE_TABLE_BASE + 60;
[PROCESS_TABLE + 3 * 16 + 15] = PTLR;

[92 * 512] = [89 * 512 + 1];










//print4 95-100
PTBR = PAGE_TABLE_BASE + 80; 
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 96;
[PTBR+5] = "0110";
[PTBR+6] = 97;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 95;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 98;
[PTBR+17] = "0110";
[PTBR+18] = 99;
[PTBR+19] = "0110";

[PROCESS_TABLE + 4 * 16 + 1] = 4;
[PROCESS_TABLE + 4 * 16 + 4] = CREATED;
[PROCESS_TABLE + 4 * 16 + 11] = 100;
[PROCESS_TABLE + 4 * 16 + 12] = 0;
[PROCESS_TABLE + 4 * 16 + 13] = 8*512;
[PROCESS_TABLE + 4 * 16 + 14] = PAGE_TABLE_BASE + 80;
[PROCESS_TABLE + 4 * 16 + 15] = PTLR;

[98 * 512] = [95 * 512 + 1];


[PROCESS_TABLE + 5 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 6 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 7 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 8 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 9 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 10 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 11 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 12 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 13 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 14 * 16 + 4] = TERMINATED;
[PROCESS_TABLE + 15 * 16 + 4] = TERMINATED;
return;
